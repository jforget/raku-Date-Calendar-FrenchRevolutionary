#
# Checking the conversions with older 0.0.x modules
#

use v6.d;
use Test;
use lib '../version-old/lib';
use lib 'lib';
use Date::Calendar::Strftime:api<1>;
use Date::Calendar::Aztec;
use Date::Calendar::Aztec::Cortes;
use Date::Calendar::Bahai;
use Date::Calendar::Bahai::Astronomical;
use Date::Calendar::Coptic;
use Date::Calendar::Ethiopic;
use Date::Calendar::Hebrew;
use Date::Calendar::Hijri;
use Date::Calendar::Gregorian;
use Date::Calendar::FrenchRevolutionary;
use Date::Calendar::FrenchRevolutionary::Arithmetic;
use Date::Calendar::FrenchRevolutionary::Astronomical;
use Date::Calendar::Julian;
use Date::Calendar::Julian::AUC;
use Date::Calendar::Maya;
use Date::Calendar::Maya::Astronomical;
use Date::Calendar::Maya::Spinden;
use Date::Calendar::Persian;
use Date::Calendar::Persian::Astronomical;

my @data-greg = (
       (229, 10, 24, before-sunrise, 'gr', "Monday 12 Jul 2021"          , "Qua 24 Mes 0229 ☼", "2021-07-12 shift to daylight", '2021-07-12')
     , (229, 10, 24, daylight,       'gr', "Monday 12 Jul 2021"          , "Qua 24 Mes 0229 ☼", "2021-07-12 no problem"       , '2021-07-12')
     , (229, 10, 24, after-sunset,   'gr', "Monday 12 Jul 2021"          , "Qua 24 Mes 0229 ☼", "2021-07-12 shift to daylight", '2021-07-12')
            );

my @data-maya = (
       (233,  2, 23, before-sunrise, 'm0', " 8 Ceh 7 Chicchan"     , "Tri 23 Bru 0233 ☼", "2024-11-13 wrong intermediate date, should be  7 Ceh 7 Chicchan")
     , (233,  2, 23, daylight,       'm0', " 8 Ceh 7 Chicchan"     , "Tri 23 Bru 0233 ☼", "2024-11-13 no problem")
     , (233,  2, 23, after-sunset,   'm0', " 8 Ceh 7 Chicchan"     , "Tri 23 Bru 0233 ☼", "2024-11-13 wrong intermediate date, should be  8 Ceh 8 Cimi")
     , (230,  7, 14, before-sunrise, 'm1', " 1 Pop 12 Lamat"       , "Qua 14 Ger 0230 ☼", "2022-04-03 wrong intermediate date, should be  0 Pop 12 Lamat")
     , (230,  7, 14, daylight,       'm1', " 1 Pop 12 Lamat"       , "Qua 14 Ger 0230 ☼", "2022-04-03 no problem")
     , (230,  7, 14, after-sunset,   'm1', " 1 Pop 12 Lamat"       , "Qua 14 Ger 0230 ☼", "2022-04-03 wrong intermediate date, should be  1 Pop 13 Muluc")
     , (233,  3,  4, before-sunrise, 'm2', "18 Ceh 4 Men"          , "Qua 04 Fri 0233 ☼", "2024-11-24 wrong intermediate date, should be 17 Ceh 4 Men")
     , (233,  3,  4, daylight,       'm2', "18 Ceh 4 Men"          , "Qua 04 Fri 0233 ☼", "2024-11-24 no problem")
     , (233,  3,  4, after-sunset,   'm2', "18 Ceh 4 Men"          , "Qua 04 Fri 0233 ☼", "2024-11-24 wrong intermediate date, should be 18 Ceh 5 Cib")
     , (232, 12, 25, before-sunrise, 'a0', " 3 Tititl 8 Cipactli"  , "Qui 25 Fru 0232 ☼", "2024-09-10 wrong intermediate date, should be  2 Tititl 8 Cipactli")
     , (232, 12, 25, daylight,       'a0', " 3 Tititl 8 Cipactli"  , "Qui 25 Fru 0232 ☼", "2024-09-10 no problem")
     , (232, 12, 25, after-sunset,   'a0', " 3 Tititl 8 Cipactli"  , "Qui 25 Fru 0232 ☼", "2024-09-10 wrong intermediate date, should be  3 Tititl 9 Ehecatl")
     , (231,  5,  4, before-sunrise, 'a1', "15 Toxcatl 13 Tochtli" , "Qua 04 Plu 0231 ☼", "2023-01-23 wrong intermediate date, should be 14 Toxcatl 13 Tochtli")
     , (231,  5,  4, daylight,       'a1', "15 Toxcatl 13 Tochtli" , "Qua 04 Plu 0231 ☼", "2023-01-23 no problem")
     , (231,  5,  4, after-sunset,   'a1', "15 Toxcatl 13 Tochtli" , "Qua 04 Plu 0231 ☼", "2023-01-23 wrong intermediate date, should be 15 Toxcatl 1 Atl")
            );

my @data-others = (
       (229,  8,  3, before-sunrise, 'ba', "Istijlál 14 Jal 0178"        , "Tri 03 Flo 0229 ☼", "2021-04-22 shift to daylight")
     , (229,  8,  3, daylight,       'ba', "Istijlál 14 Jal 0178"        , "Tri 03 Flo 0229 ☼", "2021-04-22 no problem")
     , (229,  8,  3, after-sunset,   'ba', "Istijlál 14 Jal 0178"        , "Tri 03 Flo 0229 ☼", "2021-04-22 shift to daylight")
     , (232, 12, 21, before-sunrise, 'be', "Istiqlál 19 Asm 0181"        , "Pri 21 Fru 0232 ☼", "2024-09-06 shift to daylight")
     , (232, 12, 21, daylight,       'be', "Istiqlál 19 Asm 0181"        , "Pri 21 Fru 0232 ☼", "2024-09-06 no problem")
     , (232, 12, 21, after-sunset,   'be', "Istiqlál 19 Asm 0181"        , "Pri 21 Fru 0232 ☼", "2024-09-06 shift to daylight")
     , (231,  6, 13, before-sunrise, 'co', "Psoou 24 Mes 1739"           , "Tri 13 Vnt 0231 ☼", "2023-03-03 shift to daylight")
     , (231,  6, 13, daylight,       'co', "Psoou 24 Mes 1739"           , "Tri 13 Vnt 0231 ☼", "2023-03-03 no problem")
     , (231,  6, 13, after-sunset,   'co', "Psoou 24 Mes 1739"           , "Tri 13 Vnt 0231 ☼", "2023-03-03 shift to daylight")
     , (230,  1, 15, before-sunrise, 'et', "Hamus 26 Mes 2014"           , "Qui 15 Vnd 0230 ☼", "2021-10-06 shift to daylight")
     , (230,  1, 15, daylight,       'et', "Hamus 26 Mes 2014"           , "Qui 15 Vnd 0230 ☼", "2021-10-06 no problem")
     , (230,  1, 15, after-sunset,   'et', "Hamus 26 Mes 2014"           , "Qui 15 Vnd 0230 ☼", "2021-10-06 shift to daylight")
     , (231, 12, 11, before-sunrise, 'he', "Yom Sheni 11 Elu 5783"       , "Pri 11 Fru 0231 ☼", "2023-08-28 shift to daylight")
     , (231, 12, 11, daylight,       'he', "Yom Sheni 11 Elu 5783"       , "Pri 11 Fru 0231 ☼", "2023-08-28 no problem")
     , (231, 12, 11, after-sunset,   'he', "Yom Sheni 11 Elu 5783"       , "Pri 11 Fru 0231 ☼", "2023-08-28 shift to daylight")
     , (229,  7, 25, before-sunrise, 'hi', "Yaum al-Arbi'a 02 Ram 1442"  , "Qui 25 Ger 0229 ☼", "2021-04-14 shift to daylight")
     , (229,  7, 25, daylight,       'hi', "Yaum al-Arbi'a 02 Ram 1442"  , "Qui 25 Ger 0229 ☼", "2021-04-14 no problem")
     , (229,  7, 25, after-sunset,   'hi', "Yaum al-Arbi'a 02 Ram 1442"  , "Qui 25 Ger 0229 ☼", "2021-04-14 shift to daylight")
     , (233,  6,  4, before-sunrise, 'jl', "Saturday 09 Feb 2025"        , "Qua 04 Vnt 0233 ☼", "2025-02-22 shift to daylight")
     , (233,  6,  4, daylight,       'jl', "Saturday 09 Feb 2025"        , "Qua 04 Vnt 0233 ☼", "2025-02-22 no problem")
     , (233,  6,  4, after-sunset,   'jl', "Saturday 09 Feb 2025"        , "Qua 04 Vnt 0233 ☼", "2025-02-22 shift to daylight")
     , (232,  7, 18, before-sunrise, 'jc', "Saturday 24 Mar 2777"        , "Oct 18 Ger 0232 ☼", "2024-04-06 shift to daylight")
     , (232,  7, 18, daylight,       'jc', "Saturday 24 Mar 2777"        , "Oct 18 Ger 0232 ☼", "2024-04-06 no problem")
     , (232,  7, 18, after-sunset,   'jc', "Saturday 24 Mar 2777"        , "Oct 18 Ger 0232 ☼", "2024-04-06 shift to daylight")
     , (230, 10, 19, before-sunrise, 'pe', "Panj shanbe 16 Tir 1401"     , "Non 19 Mes 0230 ☼", "2022-07-07 shift to daylight")
     , (230, 10, 19, daylight,       'pe', "Panj shanbe 16 Tir 1401"     , "Non 19 Mes 0230 ☼", "2022-07-07 no problem")
     , (230, 10, 19, after-sunset,   'pe', "Panj shanbe 16 Tir 1401"     , "Non 19 Mes 0230 ☼", "2022-07-07 shift to daylight")
     , (229, 11, 14, before-sunrise, 'pa', "Yek-shanbe 10 Mor 1400"      , "Qua 14 The 0229 ☼", "2021-08-01 shift to daylight")
     , (229, 11, 14, daylight,       'pa', "Yek-shanbe 10 Mor 1400"      , "Qua 14 The 0229 ☼", "2021-08-01 no problem")
     , (229, 11, 14, after-sunset,   'pa', "Yek-shanbe 10 Mor 1400"      , "Qua 14 The 0229 ☼", "2021-08-01 shift to daylight")
            );

my %class =   a0 => 'Date::Calendar::Aztec'
            , a1 => 'Date::Calendar::Aztec::Cortes'
            , ba => 'Date::Calendar::Bahai'
            , be => 'Date::Calendar::Bahai::Astronomical'
            , gr => 'Date::Calendar::Gregorian'
            , co => 'Date::Calendar::Coptic'
            , et => 'Date::Calendar::Ethiopic'
            , fr => 'Date::Calendar::FrenchRevolutionary'
            , fa => 'Date::Calendar::FrenchRevolutionary::Arithmetic'
            , fe => 'Date::Calendar::FrenchRevolutionary::Astronomical'
            , he => 'Date::Calendar::Hebrew'
            , hi => 'Date::Calendar::Hijri'
            , jl => 'Date::Calendar::Julian'
            , jc => 'Date::Calendar::Julian::AUC'
            , m0 => 'Date::Calendar::Maya'
            , m1 => 'Date::Calendar::Maya::Astronomical'
            , m2 => 'Date::Calendar::Maya::Spinden'
            , pe => 'Date::Calendar::Persian'
            , pa => 'Date::Calendar::Persian::Astronomical'
            ;

my %ver   =   a0 => '0.0.3'
            , a1 => '0.0.3'
            , ba => '0.0.2'
            , pe => '0.0.2'
            , be => '0.0.2'
            , co => '0.0.3'
            , et => '0.0.3'
            , fr => '0.0.6'
            , fa => '0.0.6'
            , fe => '0.0.6'
            , gr => '0.0.2'
            , he => '0.0.4'
            , hi => '0.0.2'
            , jl => '0.0.4'
            , jc => '0.0.4'
            , m0 => '0.0.3'
            , m1 => '0.0.3'
            , m2 => '0.0.3'
            , pe => '0.0.2'
            , pa => '0.0.2'
            ;

plan 15 × @data-greg.elems + 12 × @data-others.elems + 12 × @data-maya.elems;

for (|@data-greg, |@data-others) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3, $result) = $datum;
  my Date::Calendar::FrenchRevolutionary $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%A %d %b %Y"), $str2, "testing push to $str2");
  is($d2.^ver, %ver{$cal});
  my $d3 = $d2.to-date(%class<fr>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push to $str2 and $str3, $result");
  is($d3.^ver.Str.substr(0, 4), '0.1.');

  # push-pull
  my Date::Calendar::FrenchRevolutionary $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull to $str2 and $str3, $result");
  is($d4.^ver.Str.substr(0, 4), '0.1.');

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%A %d %b %Y"), $str2, "testing pull to $str2");
  is($d5.^ver, %ver{$cal});
  my $d6 = $d5.to-date(%class<fr>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push to $str2 and $str3, $result");
  is($d6.^ver.Str.substr(0, 4), '0.1.');

  # pull-pull
  my Date::Calendar::FrenchRevolutionary $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull to $str2 and $str3, $result");
  is($d7.^ver.Str.substr(0, 4), '0.1.');
}

for (@data-maya) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3, $result) = $datum;
  my Date::Calendar::FrenchRevolutionary $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);
  my Str $str1 = $d1.strftime("%a %d %b %Y %Ep");

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%e %B %V %A"), $str2, "testing push to $str2");
  is($d2.^ver, %ver{$cal});
  my $d3 = $d2.to-date(%class<fr>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push $str1 to $str2 and $str3, $result");
  is($d3.^ver.Str.substr(0, 4), '0.1.');

  # push-pull
  my Date::Calendar::FrenchRevolutionary $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull $str1 to $str2 and $str3, $result");
  is($d4.^ver.Str.substr(0, 4), '0.1.');

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%e %B %V %A"), $str2, "testing pull to $str2");
  is($d5.^ver, %ver{$cal});
  my $d6 = $d5.to-date(%class<fr>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push $str1 to $str2 and $str3, $result");
  is($d6.^ver.Str.substr(0, 4), '0.1.');

  # pull-pull
  my Date::Calendar::FrenchRevolutionary $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull $str1 to $str2 and $str3, $result");
  is($d7.^ver.Str.substr(0, 4), '0.1.');
}

# Conversion with core class Date: only push-pull tests
for (@data-greg) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3, $result, $str4) = $datum;
  my Date::Calendar::FrenchRevolutionary $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  my $d2 = $d1.to-date('Date');
  is($d2.gist, $str4, "testing push from $year-$month-$day to $str4");
  my Date::Calendar::FrenchRevolutionary $d3 .= new-from-date($d2);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull from $year-$month-$day to Gregorian $str4 and then $str3, $result");
  is($d3.^ver.Str.substr(0, 4), '0.1.');
}

done-testing;
